openapi: 3.0.0
info:
  title: Courses API
  version: v1

servers:
  - url: /courses/

paths:
  /courses/courses:
    get:
      operationId: getCoursesByQuery
      summary: Retrieve courses associated with the keyword query from folio mod-courses
      description: Retrieve courses associated with the keyword query
      parameters:
        - $ref: '#/components/parameters/x-okapi-tenant-header'
        - $ref: '#/components/parameters/x-okapi-token-header'
        - $ref: '#/components/parameters/request-query-parameters'
      responses:
        '200':
          description: 'Calls the mod-courses GET /coursereserves/courses API and returns the result as-is
          The example of response: https://github.com/folio-org/mod-courses/blob/master/ramls/examples/reserves.json'
          content:
            application/json:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

  /courses/reserves:
    get:
      operationId: getReservesByQuery
      summary: Retrieve reserves associated with the keyword query from folio mod-courses
      description: Retrieve reserves associated with the keyword query
      parameters:
        - $ref: '#/components/parameters/x-okapi-tenant-header'
        - $ref: '#/components/parameters/x-okapi-token-header'
        - $ref: '#/components/parameters/request-query-parameters'
      responses:
        '200':
          description: 'Calls the mod-courses GET /coursereserves/reserves API and returns the result as-is
         The example of response: https://github.com/folio-org/mod-courses/blob/master/ramls/examples/reserves.json'
          content:
            application/json:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

  /courses/departments:
    get:
      operationId: getDepartments
      summary: Retrieve course departments
      description: Retrieve course departments
      parameters:
        - $ref: '#/components/parameters/x-okapi-tenant-header'
        - $ref: '#/components/parameters/x-okapi-token-header'
        - $ref: '#/components/parameters/request-query-parameters'
      responses:
        '200':
          description: 'Calls the mod-courses GET /coursereserves/departments API and returns the result as-is
          The example of response: https://github.com/folio-org/mod-courses/blob/master/ramls/examples/departments.json'
          content:
            application/json:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

  /courses/instructors:
    get:
      operationId: getInstructors
      summary: Retrieve course instructors
      description: Retrieve course  instructors
      parameters:
        - $ref: '#/components/parameters/x-okapi-tenant-header'
        - $ref: '#/components/parameters/x-okapi-token-header'
        - $ref: '#/components/parameters/request-query-parameters'
        - $ref: '#/components/parameters/sort-by'
      responses:
        '200':
          description: 'Calls the mod-courses GET /coursereserves/courselistings API and returns instructorObjects'
          content:
            application/json:
              schema:
                $ref: 'schemas/instructors.json'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

  /courses/courselistings/{instanceId}/reserves:
    get:
      operationId: getReservesByInstanceId
      summary: Retrieve reserves associated with the course instance id from folio mod-courses
      description: Retrieve reserves associated with course instance id
      parameters:
        - $ref: '#/components/parameters/instance-id-path'
        - $ref: '#/components/parameters/x-okapi-tenant-header'
        - $ref: '#/components/parameters/x-okapi-token-header'
        - $ref: '#/components/parameters/request-query-parameters'
      responses:
        '200':
          description: 'Calls the mod-courses GET /coursereserves/courselistings/{listing_id}/courses API and returns the result as-is
          The example of response: https://github.com/folio-org/mod-courses/blob/master/ramls/examples/reserves.json'
          content:
            application/json:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

components:
  schemas:
    errorResponse:
      $ref: 'schemas/error.json#/Error'
    requestQueryParameters:
      $ref: 'schemas/requestQueryParameters.json#/RequestQueryParameters'
    courselistings:
      $ref: 'schemas/courselistings.json'

  parameters:
    request-query-parameters:
      name: requestQueryParameters
      in: query
      description: Request query parameters(query, limit, offset and etc.) as object.
      schema:
        $ref: '#/components/schemas/requestQueryParameters'
    query-parameter:
      name: query
      in: query
      description: The keyword query in CQL format
      schema:
        type: string
    lang:
      name: lang
      in: query
      description: Requested language
      required: false
      example: en
      schema:
        pattern: "[a-zA-Z]{2}"
        default: en
        type: string
    type:
      name: type
      in: query
      description: Indicates how to route the request
      required: true
      schema:
        type: string
    x-okapi-tenant-header:
      name: x-okapi-tenant
      in: header
      description: x-okapi-tenant header value
      required: false
      schema:
        type: string
    x-okapi-url-header:
      name: x-okapi-url
      in: header
      description: x-okapi-url header value
      required: false
      schema:
        type: string
    x-okapi-token-header:
      name: x-okapi-token
      in: header
      description: x-okapi-token header value
      required: false
      schema:
        type: string
    authorization:
      name: authorization
      in: header
      description: apikey for authorization
      required: false
      schema:
        type: string
    apiKey:
      name: apiKey
      in: query
      description: apikey for authorization
      required: false
      schema:
        type: string
    instance-id-path:
      name: instanceId
      in: path
      description: Course Instance's UUID
      required: true
      schema:
        type: string
    sort-by:
      name: sortBy
      in: query
      description: Param to sort collection results by a specific field
      required: false
      example: sortBy=name/sort.descending
      schema:
        type: string
        pattern: ^(name|id)\/sort\.(ascending|descending)$

  responses:
    badRequestResponse:
      description: Validation errors
      content:
        application/json:
          example:
            $ref: ./examples/error/badRequestErrorResponse.json
          schema:
            $ref: "#/components/schemas/errorResponse"
    internalServerErrorResponse:
      description: When unhandled exception occurred during code execution, e.g. NullPointerException
      content:
        application/json:
          example:
            $ref: ./examples/error/internalErrorResponse.json
          schema:
            $ref: "#/components/schemas/errorResponse"
    notAuthorizedResponse:
      description: Not authorized to perform requested action
      content:
        application/json:
          example:
            $ref: examples/error/unauthorizedErrorResponse.json
          schema:
            $ref: "#/components/schemas/errorResponse"
    accessDeniedResponse:
      description: Access Denied
      content:
        application/json:
          example:
            $ref: examples/error/accessDeniedErrorResponse.json
          schema:
            $ref: "#/components/schemas/errorResponse"
    notFoundResponse:
      description: Item with a given ID not found
      content:
        application/json:
          example:
            $ref: examples/error/notFoundErrorResponse.json
          schema:
            $ref: "#/components/schemas/errorResponse"
    unprocessableEntityErrorResponse:
      description: Item with a given ID not found
      content:
        application/json:
          example:
            $ref: examples/error/unprocessableEntityErrorResponse.json
          schema:
            $ref: "#/components/schemas/errorResponse"
    notImplementedResponse:
      description: The server does not support the functionality required to fulfill the request
      content:
        application/json:
          example: "the method that is unavailable"
          schema:
            $ref: "#/components/schemas/errorResponse"

